definitions:
  controllers.Connection:
    properties:
      from:
        type: string
      id:
        type: string
      to:
        type: string
    type: object
  controllers.Flow:
    properties:
      connections:
        items:
          $ref: '#/definitions/controllers.Connection'
        type: array
      nodes:
        items:
          $ref: '#/definitions/controllers.Node'
        type: array
    type: object
  controllers.Interface:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  controllers.Node:
    properties:
      chaincodeName:
        type: string
      directlyExecutable:
        type: boolean
      id:
        type: string
      interfaces:
        items:
          $ref: '#/definitions/controllers.Interface'
        type: array
      methodName:
        type: string
      name:
        type: string
      options:
        items:
          $ref: '#/definitions/controllers.Options'
        type: array
      tokenId:
        type: string
      type:
        type: string
    type: object
  controllers.Options:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  controllers.RequestMedicalDataInput:
    properties:
      dateEndTimestamp:
        type: string
      dateStartTimestamp:
        type: string
      medicalEntryName:
        type: string
    type: object
  models.Login:
    properties:
      certificate:
        type: string
      mspid:
        type: string
      privateKey:
        type: string
    required:
    - certificate
    - mspid
    - privateKey
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Login
      tags:
      - login
  /v1/computation/availablemethods/{chaincode_name}:
    get:
      parameters:
      - description: Chaincode name
        in: path
        name: chaincode_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - Bearer: []
      summary: GetAvailableMethods
      tags:
      - Computation
  /v1/computation/queue:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - Bearer: []
      summary: GetQueue
      tags:
      - Computation
  /v1/computation/requestflow:
    post:
      parameters:
      - description: Request flow input data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.Flow'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - Bearer: []
      summary: RequestFlow
      tags:
      - Computation
  /v1/computation/token/{token_id}:
    get:
      parameters:
      - description: Token id
        in: path
        name: token_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - Bearer: []
      summary: ReadToken
      tags:
      - Computation
  /v1/computation/token/{token_id}/start:
    post:
      parameters:
      - description: Token id
        in: path
        name: token_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - Bearer: []
      summary: StartComputation
      tags:
      - Computation
  /v1/computation/usertokens:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - Bearer: []
      summary: ReadUserTokens
      tags:
      - Computation
  /v1/medicaldata/request:
    post:
      parameters:
      - description: Request medical data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.RequestMedicalDataInput'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - Bearer: []
      summary: GetMedicalData
      tags:
      - MedicalData
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
