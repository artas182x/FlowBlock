version: "3.8"

x-frontend-common: &frontend-common
  restart: unless-stopped
  image: registry.gitlab.com/artas182x/dockerimages_blockchaindataprocessor/frontend:0.4
  build: ./frontend
  networks:
    - hyperledger
  ports:
    - target: 80
      published: 80
      protocol: tcp
      mode: host

x-backend-common: &backend-common
  restart: unless-stopped
  image: registry.gitlab.com/artas182x/dockerimages_blockchaindataprocessor/backend:0.4
  build: ./backend
  depends_on:
    - redis1
    - minio1
  networks:
    - hyperledger

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-03-05T06-32-39Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  networks:
    - hyperledger
  environment:
    - MINIO_ROOT_USER=admin
    - MINIO_ROOT_PASSWORD=adminadmin
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

x-redis-common: &redis-common
  image: redis:alpine
  restart: unless-stopped
  networks:
    - hyperledger
#   ports:
#     - 6379:6379

services:
  minio-client:
    image: minio/mc
    networks:
      - hyperledger
    volumes:
      - "${PWD}/sample_files/:/files/"
    depends_on:
      - minio1
      - minio2
    entrypoint: >
     /bin/sh -c "sleep 5 &&
     /usr/bin/mc config host add myminio http://minio1:9000 admin adminadmin;
     /usr/bin/mc mb myminio/input-files;
     /usr/bin/mc cp /files/* myminio/input-files
     "

  redis1:
    <<: *redis-common
    hostname: redis1
    deploy:
      placement:
        constraints:
          - node.labels.org == org1

  minio1:
    <<: *minio-common
    hostname: minio1
    deploy:
      placement:
        constraints:
          - node.labels.org == org1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  frontend1:
    <<: *frontend-common
    depends_on:
      - backend1
    environment:
      - BACKEND_HOST=backend1
    deploy:
      placement:
        constraints:
          - node.labels.org == org1

  backend1:
    <<: *backend-common
    hostname: backend1
    volumes:
    - "${PWD}/network1.yaml:/out/network.yaml"
    deploy:
      placement:
        constraints:
          - node.labels.org == org1
    environment:
      - MINIO_URL=http://minio1:9000
      - REDIS_URL=redis://redis1:6379
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminadmin
      - WORKERS_NUM=1

  frontend2:
    <<: *frontend-common
    depends_on:
      - backend2
    environment:
      - BACKEND_HOST=backend2
    deploy:
      placement:
        constraints:
          - node.labels.org == org2

  redis2:
    <<: *redis-common
    hostname: redis2
    deploy:
      placement:
        constraints:
          - node.labels.org == org2

  backend2:
    <<: *backend-common
    hostname: backend2
    volumes:
    - "${PWD}/network2.yaml:/out/network.yaml"
    deploy:
      placement:
        constraints:
          - node.labels.org == org2
    environment:
      - MINIO_URL=http://minio2:9000
      - REDIS_URL=redis://redis2:6379
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminadmin
      - WORKERS_NUM=1
      
  minio2:
    <<: *minio-common
    hostname: minio2
    deploy:
      placement:
        constraints:
          - node.labels.org == org2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  redis3:
    <<: *redis-common
    hostname: redis3
    deploy:
      placement:
        constraints:
          - node.labels.org == org3

  frontend3:
    <<: *frontend-common
    depends_on:
      - backend3
    environment:
      - BACKEND_HOST=backend3
    deploy:
      placement:
        constraints:
          - node.labels.org == org3

  backend3:
    <<: *backend-common
    hostname: backend3
    volumes:
    - "${PWD}/network3.yaml:/out/network.yaml"
    deploy:
      placement:
        constraints:
          - node.labels.org == org3
    environment:
      - MINIO_URL=http://minio3:9000
      - REDIS_URL=redis://redis3:6379
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminadmin
      - WORKERS_NUM=1


  minio3:
    <<: *minio-common
    hostname: minio3
    deploy:
      placement:
        constraints:
          - node.labels.org == org3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  redis4:
    <<: *redis-common
    hostname: redis4
    deploy:
      placement:
        constraints:
          - node.labels.org == org4

  frontend4:
    <<: *frontend-common
    depends_on:
      - backend4
    environment:
      - BACKEND_HOST=backend4
    deploy:
      placement:
        constraints:
          - node.labels.org == org4

  backend4:
    <<: *backend-common
    hostname: backend4
    volumes:
    - "${PWD}/network4.yaml:/out/network.yaml"
    deploy:
      placement:
        constraints:
          - node.labels.org == org4
    environment:
      - MINIO_URL=http://minio4:9000
      - REDIS_URL=redis://redis4:6379
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminadmin
      - WORKERS_NUM=1

  minio4:
    <<: *minio-common
    hostname: minio4
    deploy:
      placement:
        constraints:
          - node.labels.org == org4
    volumes:
      - data4-1:/data1
      - data4-2:/data2

networks:
  hyperledger:
    name: fabric_test
    external: true
    
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2: